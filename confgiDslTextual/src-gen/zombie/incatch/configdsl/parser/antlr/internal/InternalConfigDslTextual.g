/*
 * generated by Xtext 2.27.0
 */
grammar InternalConfigDslTextual;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package zombie.incatch.configdsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package zombie.incatch.configdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import zombie.incatch.configdsl.services.ConfigDslTextualGrammarAccess;

}

@parser::members {

 	private ConfigDslTextualGrammarAccess grammarAccess;

    public InternalConfigDslTextualParser(TokenStream input, ConfigDslTextualGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Config";
   	}

   	@Override
   	protected ConfigDslTextualGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	iv_ruleConfig=ruleConfig
	{ $current=$iv_ruleConfig.current; }
	EOF;

// Rule Config
ruleConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Config'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigAccess().getConfigKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='project'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigAccess().getProjectKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigAccess().getProjectProjectParserRuleCall_3_0());
				}
				lv_project_3_0=ruleProject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigRule());
					}
					set(
						$current,
						"project",
						lv_project_3_0,
						"zombie.incatch.configdsl.ConfigDslTextual.Project");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='simpleStringFields'
		{
			newLeafNode(otherlv_4, grammarAccess.getConfigAccess().getSimpleStringFieldsKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigAccess().getSimpleStringFieldsSimpleStringFieldParserRuleCall_6_0());
				}
				lv_simpleStringFields_6_0=ruleSimpleStringField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigRule());
					}
					add(
						$current,
						"simpleStringFields",
						lv_simpleStringFields_6_0,
						"zombie.incatch.configdsl.ConfigDslTextual.SimpleStringField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getConfigAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigAccess().getSimpleStringFieldsSimpleStringFieldParserRuleCall_7_1_0());
					}
					lv_simpleStringFields_8_0=ruleSimpleStringField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigRule());
						}
						add(
							$current,
							"simpleStringFields",
							lv_simpleStringFields_8_0,
							"zombie.incatch.configdsl.ConfigDslTextual.SimpleStringField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_8());
		}
		(
			otherlv_10='dynamicListFields'
			{
				newLeafNode(otherlv_10, grammarAccess.getConfigAccess().getDynamicListFieldsKeyword_9_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigAccess().getDynamicListFieldsDynamicListFieldParserRuleCall_9_2_0());
					}
					lv_dynamicListFields_12_0=ruleDynamicListField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigRule());
						}
						add(
							$current,
							"dynamicListFields",
							lv_dynamicListFields_12_0,
							"zombie.incatch.configdsl.ConfigDslTextual.DynamicListField");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getConfigAccess().getCommaKeyword_9_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConfigAccess().getDynamicListFieldsDynamicListFieldParserRuleCall_9_3_1_0());
						}
						lv_dynamicListFields_14_0=ruleDynamicListField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConfigRule());
							}
							add(
								$current,
								"dynamicListFields",
								lv_dynamicListFields_14_0,
								"zombie.incatch.configdsl.ConfigDslTextual.DynamicListField");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_9_4());
			}
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleProject
entryRuleProject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectRule()); }
	iv_ruleProject=ruleProject
	{ $current=$iv_ruleProject.current; }
	EOF;

// Rule Project
ruleProject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProjectAccess().getProjectAction_0(),
					$current);
			}
		)
		(
			(
				lv_KeepClassification_1_0='KeepClassification'
				{
					newLeafNode(lv_KeepClassification_1_0, grammarAccess.getProjectAccess().getKeepClassificationKeepClassificationKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectRule());
					}
					setWithLastConsumed($current, "KeepClassification", lv_KeepClassification_1_0 != null, "KeepClassification");
				}
			)
		)?
		otherlv_2='Project'
		{
			newLeafNode(otherlv_2, grammarAccess.getProjectAccess().getProjectKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_Name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					set(
						$current,
						"Name",
						lv_Name_3_0,
						"zombie.incatch.configdsl.ConfigDslTextual.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleStringField
entryRuleSimpleStringField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleStringFieldRule()); }
	iv_ruleSimpleStringField=ruleSimpleStringField
	{ $current=$iv_ruleSimpleStringField.current; }
	EOF;

// Rule SimpleStringField
ruleSimpleStringField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleStringFieldAccess().getSimpleStringFieldAction_0(),
					$current);
			}
		)
		(
			(
				lv_IsRequired_1_0='IsRequired'
				{
					newLeafNode(lv_IsRequired_1_0, grammarAccess.getSimpleStringFieldAccess().getIsRequiredIsRequiredKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleStringFieldRule());
					}
					setWithLastConsumed($current, "IsRequired", lv_IsRequired_1_0 != null, "IsRequired");
				}
			)
		)?
		otherlv_2='SimpleStringField'
		{
			newLeafNode(otherlv_2, grammarAccess.getSimpleStringFieldAccess().getSimpleStringFieldKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleStringFieldAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_Name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleStringFieldRule());
					}
					set(
						$current,
						"Name",
						lv_Name_3_0,
						"zombie.incatch.configdsl.ConfigDslTextual.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getSimpleStringFieldAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='Size'
			{
				newLeafNode(otherlv_5, grammarAccess.getSimpleStringFieldAccess().getSizeKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleStringFieldAccess().getSizeEIntParserRuleCall_5_1_0());
					}
					lv_Size_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleStringFieldRule());
						}
						set(
							$current,
							"Size",
							lv_Size_6_0,
							"zombie.incatch.configdsl.ConfigDslTextual.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSimpleStringFieldAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDynamicListField
entryRuleDynamicListField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDynamicListFieldRule()); }
	iv_ruleDynamicListField=ruleDynamicListField
	{ $current=$iv_ruleDynamicListField.current; }
	EOF;

// Rule DynamicListField
ruleDynamicListField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDynamicListFieldAccess().getDynamicListFieldAction_0(),
					$current);
			}
		)
		(
			(
				lv_IsRequired_1_0='IsRequired'
				{
					newLeafNode(lv_IsRequired_1_0, grammarAccess.getDynamicListFieldAccess().getIsRequiredIsRequiredKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDynamicListFieldRule());
					}
					setWithLastConsumed($current, "IsRequired", lv_IsRequired_1_0 != null, "IsRequired");
				}
			)
		)?
		otherlv_2='DynamicListField'
		{
			newLeafNode(otherlv_2, grammarAccess.getDynamicListFieldAccess().getDynamicListFieldKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDynamicListFieldAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_Name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDynamicListFieldRule());
					}
					set(
						$current,
						"Name",
						lv_Name_3_0,
						"zombie.incatch.configdsl.ConfigDslTextual.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDynamicListFieldAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='dynamicListItems'
			{
				newLeafNode(otherlv_5, grammarAccess.getDynamicListFieldAccess().getDynamicListItemsKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getDynamicListFieldAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDynamicListFieldAccess().getDynamicListItemsDynamicListItemParserRuleCall_5_2_0());
					}
					lv_dynamicListItems_7_0=ruleDynamicListItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDynamicListFieldRule());
						}
						add(
							$current,
							"dynamicListItems",
							lv_dynamicListItems_7_0,
							"zombie.incatch.configdsl.ConfigDslTextual.DynamicListItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getDynamicListFieldAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDynamicListFieldAccess().getDynamicListItemsDynamicListItemParserRuleCall_5_3_1_0());
						}
						lv_dynamicListItems_9_0=ruleDynamicListItem
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDynamicListFieldRule());
							}
							add(
								$current,
								"dynamicListItems",
								lv_dynamicListItems_9_0,
								"zombie.incatch.configdsl.ConfigDslTextual.DynamicListItem");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getDynamicListFieldAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDynamicListFieldAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleDynamicListItem
entryRuleDynamicListItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDynamicListItemRule()); }
	iv_ruleDynamicListItem=ruleDynamicListItem
	{ $current=$iv_ruleDynamicListItem.current; }
	EOF;

// Rule DynamicListItem
ruleDynamicListItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDynamicListItemAccess().getDynamicListItemAction_0(),
					$current);
			}
		)
		otherlv_1='DynamicListItem'
		{
			newLeafNode(otherlv_1, grammarAccess.getDynamicListItemAccess().getDynamicListItemKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDynamicListItemAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_Name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDynamicListItemRule());
					}
					set(
						$current,
						"Name",
						lv_Name_2_0,
						"zombie.incatch.configdsl.ConfigDslTextual.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
