/*
 * generated by Xtext 2.27.0
 */
package zombie.incatch.configdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ConfigDslTextualGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.configdsl.ConfigDslTextual.Config");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cProjectKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProjectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cProjectProjectParserRuleCall_3_0 = (RuleCall)cProjectAssignment_3.eContents().get(0);
		private final Keyword cSimpleStringFieldsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSimpleStringFieldsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSimpleStringFieldsSimpleStringFieldParserRuleCall_6_0 = (RuleCall)cSimpleStringFieldsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSimpleStringFieldsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSimpleStringFieldsSimpleStringFieldParserRuleCall_7_1_0 = (RuleCall)cSimpleStringFieldsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDynamicListFieldsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cDynamicListFieldsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDynamicListFieldsDynamicListFieldParserRuleCall_9_2_0 = (RuleCall)cDynamicListFieldsAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cDynamicListFieldsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cDynamicListFieldsDynamicListFieldParserRuleCall_9_3_1_0 = (RuleCall)cDynamicListFieldsAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Config returns Config:
		//    'Config'
		//    '{'
		//        'project' project=Project
		//        'simpleStringFields' '{' simpleStringFields+=SimpleStringField ( "," simpleStringFields+=SimpleStringField)* '}'
		//        ('dynamicListFields' '{' dynamicListFields+=DynamicListField ( "," dynamicListFields+=DynamicListField)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Config'
		//'{'
		//    'project' project=Project
		//    'simpleStringFields' '{' simpleStringFields+=SimpleStringField ( "," simpleStringFields+=SimpleStringField)* '}'
		//    ('dynamicListFields' '{' dynamicListFields+=DynamicListField ( "," dynamicListFields+=DynamicListField)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Config'
		public Keyword getConfigKeyword_0() { return cConfigKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'project'
		public Keyword getProjectKeyword_2() { return cProjectKeyword_2; }
		
		//project=Project
		public Assignment getProjectAssignment_3() { return cProjectAssignment_3; }
		
		//Project
		public RuleCall getProjectProjectParserRuleCall_3_0() { return cProjectProjectParserRuleCall_3_0; }
		
		//'simpleStringFields'
		public Keyword getSimpleStringFieldsKeyword_4() { return cSimpleStringFieldsKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//simpleStringFields+=SimpleStringField
		public Assignment getSimpleStringFieldsAssignment_6() { return cSimpleStringFieldsAssignment_6; }
		
		//SimpleStringField
		public RuleCall getSimpleStringFieldsSimpleStringFieldParserRuleCall_6_0() { return cSimpleStringFieldsSimpleStringFieldParserRuleCall_6_0; }
		
		//( "," simpleStringFields+=SimpleStringField)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//simpleStringFields+=SimpleStringField
		public Assignment getSimpleStringFieldsAssignment_7_1() { return cSimpleStringFieldsAssignment_7_1; }
		
		//SimpleStringField
		public RuleCall getSimpleStringFieldsSimpleStringFieldParserRuleCall_7_1_0() { return cSimpleStringFieldsSimpleStringFieldParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//('dynamicListFields' '{' dynamicListFields+=DynamicListField ( "," dynamicListFields+=DynamicListField)* '}' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'dynamicListFields'
		public Keyword getDynamicListFieldsKeyword_9_0() { return cDynamicListFieldsKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//dynamicListFields+=DynamicListField
		public Assignment getDynamicListFieldsAssignment_9_2() { return cDynamicListFieldsAssignment_9_2; }
		
		//DynamicListField
		public RuleCall getDynamicListFieldsDynamicListFieldParserRuleCall_9_2_0() { return cDynamicListFieldsDynamicListFieldParserRuleCall_9_2_0; }
		
		//( "," dynamicListFields+=DynamicListField)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//dynamicListFields+=DynamicListField
		public Assignment getDynamicListFieldsAssignment_9_3_1() { return cDynamicListFieldsAssignment_9_3_1; }
		
		//DynamicListField
		public RuleCall getDynamicListFieldsDynamicListFieldParserRuleCall_9_3_1_0() { return cDynamicListFieldsDynamicListFieldParserRuleCall_9_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.configdsl.ConfigDslTextual.Project");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cKeepClassificationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cKeepClassificationKeepClassificationKeyword_1_0 = (Keyword)cKeepClassificationAssignment_1.eContents().get(0);
		private final Keyword cProjectKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Project returns Project:
		//    {Project}
		//    (KeepClassification?='KeepClassification')?
		//    'Project'
		//    Name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Project}
		//(KeepClassification?='KeepClassification')?
		//'Project'
		//Name=EString
		public Group getGroup() { return cGroup; }
		
		//{Project}
		public Action getProjectAction_0() { return cProjectAction_0; }
		
		//(KeepClassification?='KeepClassification')?
		public Assignment getKeepClassificationAssignment_1() { return cKeepClassificationAssignment_1; }
		
		//'KeepClassification'
		public Keyword getKeepClassificationKeepClassificationKeyword_1_0() { return cKeepClassificationKeepClassificationKeyword_1_0; }
		
		//'Project'
		public Keyword getProjectKeyword_2() { return cProjectKeyword_2; }
		
		//Name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class SimpleStringFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.configdsl.ConfigDslTextual.SimpleStringField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleStringFieldAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsRequiredAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsRequiredIsRequiredKeyword_1_0 = (Keyword)cIsRequiredAssignment_1.eContents().get(0);
		private final Keyword cSimpleStringFieldKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSizeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSizeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSizeEIntParserRuleCall_5_1_0 = (RuleCall)cSizeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SimpleStringField returns SimpleStringField:
		//    {SimpleStringField}
		//    (IsRequired?='IsRequired')?
		//    'SimpleStringField'
		//    Name=EString
		//    '{'
		//        ('Size' Size=EInt)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SimpleStringField}
		//(IsRequired?='IsRequired')?
		//'SimpleStringField'
		//Name=EString
		//'{'
		//    ('Size' Size=EInt)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SimpleStringField}
		public Action getSimpleStringFieldAction_0() { return cSimpleStringFieldAction_0; }
		
		//(IsRequired?='IsRequired')?
		public Assignment getIsRequiredAssignment_1() { return cIsRequiredAssignment_1; }
		
		//'IsRequired'
		public Keyword getIsRequiredIsRequiredKeyword_1_0() { return cIsRequiredIsRequiredKeyword_1_0; }
		
		//'SimpleStringField'
		public Keyword getSimpleStringFieldKeyword_2() { return cSimpleStringFieldKeyword_2; }
		
		//Name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('Size' Size=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Size'
		public Keyword getSizeKeyword_5_0() { return cSizeKeyword_5_0; }
		
		//Size=EInt
		public Assignment getSizeAssignment_5_1() { return cSizeAssignment_5_1; }
		
		//EInt
		public RuleCall getSizeEIntParserRuleCall_5_1_0() { return cSizeEIntParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DynamicListFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.configdsl.ConfigDslTextual.DynamicListField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDynamicListFieldAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsRequiredAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsRequiredIsRequiredKeyword_1_0 = (Keyword)cIsRequiredAssignment_1.eContents().get(0);
		private final Keyword cDynamicListFieldKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDynamicListItemsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDynamicListItemsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDynamicListItemsDynamicListItemParserRuleCall_5_2_0 = (RuleCall)cDynamicListItemsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cDynamicListItemsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cDynamicListItemsDynamicListItemParserRuleCall_5_3_1_0 = (RuleCall)cDynamicListItemsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DynamicListField returns DynamicListField:
		//    {DynamicListField}
		//    (IsRequired?='IsRequired')?
		//    'DynamicListField'
		//    Name=EString
		//    '{'
		//        ('dynamicListItems' '{' dynamicListItems+=DynamicListItem ( "," dynamicListItems+=DynamicListItem)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DynamicListField}
		//(IsRequired?='IsRequired')?
		//'DynamicListField'
		//Name=EString
		//'{'
		//    ('dynamicListItems' '{' dynamicListItems+=DynamicListItem ( "," dynamicListItems+=DynamicListItem)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{DynamicListField}
		public Action getDynamicListFieldAction_0() { return cDynamicListFieldAction_0; }
		
		//(IsRequired?='IsRequired')?
		public Assignment getIsRequiredAssignment_1() { return cIsRequiredAssignment_1; }
		
		//'IsRequired'
		public Keyword getIsRequiredIsRequiredKeyword_1_0() { return cIsRequiredIsRequiredKeyword_1_0; }
		
		//'DynamicListField'
		public Keyword getDynamicListFieldKeyword_2() { return cDynamicListFieldKeyword_2; }
		
		//Name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('dynamicListItems' '{' dynamicListItems+=DynamicListItem ( "," dynamicListItems+=DynamicListItem)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'dynamicListItems'
		public Keyword getDynamicListItemsKeyword_5_0() { return cDynamicListItemsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//dynamicListItems+=DynamicListItem
		public Assignment getDynamicListItemsAssignment_5_2() { return cDynamicListItemsAssignment_5_2; }
		
		//DynamicListItem
		public RuleCall getDynamicListItemsDynamicListItemParserRuleCall_5_2_0() { return cDynamicListItemsDynamicListItemParserRuleCall_5_2_0; }
		
		//( "," dynamicListItems+=DynamicListItem)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//dynamicListItems+=DynamicListItem
		public Assignment getDynamicListItemsAssignment_5_3_1() { return cDynamicListItemsAssignment_5_3_1; }
		
		//DynamicListItem
		public RuleCall getDynamicListItemsDynamicListItemParserRuleCall_5_3_1_0() { return cDynamicListItemsDynamicListItemParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.configdsl.ConfigDslTextual.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.configdsl.ConfigDslTextual.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.configdsl.ConfigDslTextual.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class DynamicListItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.configdsl.ConfigDslTextual.DynamicListItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDynamicListItemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDynamicListItemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//DynamicListItem returns DynamicListItem:
		//    {DynamicListItem}
		//    'DynamicListItem'
		//    Name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{DynamicListItem}
		//'DynamicListItem'
		//Name=EString
		public Group getGroup() { return cGroup; }
		
		//{DynamicListItem}
		public Action getDynamicListItemAction_0() { return cDynamicListItemAction_0; }
		
		//'DynamicListItem'
		public Keyword getDynamicListItemKeyword_1() { return cDynamicListItemKeyword_1; }
		
		//Name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	
	
	private final ConfigElements pConfig;
	private final ProjectElements pProject;
	private final SimpleStringFieldElements pSimpleStringField;
	private final DynamicListFieldElements pDynamicListField;
	private final EStringElements pEString;
	private final EBooleanElements pEBoolean;
	private final EIntElements pEInt;
	private final DynamicListItemElements pDynamicListItem;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ConfigDslTextualGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pConfig = new ConfigElements();
		this.pProject = new ProjectElements();
		this.pSimpleStringField = new SimpleStringFieldElements();
		this.pDynamicListField = new DynamicListFieldElements();
		this.pEString = new EStringElements();
		this.pEBoolean = new EBooleanElements();
		this.pEInt = new EIntElements();
		this.pDynamicListItem = new DynamicListItemElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("zombie.incatch.configdsl.ConfigDslTextual".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Config returns Config:
	//    'Config'
	//    '{'
	//        'project' project=Project
	//        'simpleStringFields' '{' simpleStringFields+=SimpleStringField ( "," simpleStringFields+=SimpleStringField)* '}'
	//        ('dynamicListFields' '{' dynamicListFields+=DynamicListField ( "," dynamicListFields+=DynamicListField)* '}' )?
	//    '}';
	public ConfigElements getConfigAccess() {
		return pConfig;
	}
	
	public ParserRule getConfigRule() {
		return getConfigAccess().getRule();
	}
	
	//Project returns Project:
	//    {Project}
	//    (KeepClassification?='KeepClassification')?
	//    'Project'
	//    Name=EString;
	public ProjectElements getProjectAccess() {
		return pProject;
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}
	
	//SimpleStringField returns SimpleStringField:
	//    {SimpleStringField}
	//    (IsRequired?='IsRequired')?
	//    'SimpleStringField'
	//    Name=EString
	//    '{'
	//        ('Size' Size=EInt)?
	//    '}';
	public SimpleStringFieldElements getSimpleStringFieldAccess() {
		return pSimpleStringField;
	}
	
	public ParserRule getSimpleStringFieldRule() {
		return getSimpleStringFieldAccess().getRule();
	}
	
	//DynamicListField returns DynamicListField:
	//    {DynamicListField}
	//    (IsRequired?='IsRequired')?
	//    'DynamicListField'
	//    Name=EString
	//    '{'
	//        ('dynamicListItems' '{' dynamicListItems+=DynamicListItem ( "," dynamicListItems+=DynamicListItem)* '}' )?
	//    '}';
	public DynamicListFieldElements getDynamicListFieldAccess() {
		return pDynamicListField;
	}
	
	public ParserRule getDynamicListFieldRule() {
		return getDynamicListFieldAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//DynamicListItem returns DynamicListItem:
	//    {DynamicListItem}
	//    'DynamicListItem'
	//    Name=EString;
	public DynamicListItemElements getDynamicListItemAccess() {
		return pDynamicListItem;
	}
	
	public ParserRule getDynamicListItemRule() {
		return getDynamicListItemAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
