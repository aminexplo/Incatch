/*
 * generated by Xtext 2.27.0
 */
package zombie.incatch.constraintdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ConstraintDslTextualGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ConstraintCollectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.constraintdsl.ConstraintDslTextual.ConstraintCollection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstraintCollectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRulesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRulesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRulesRuleParserRuleCall_5_0 = (RuleCall)cRulesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRulesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRulesRuleParserRuleCall_6_1_0 = (RuleCall)cRulesAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ConstraintCollection returns ConstraintCollection:
		//    'ConstraintCollection'
		//    name=EString
		//    '{'
		//        'rules' '{' rules+=Rule ( "," rules+=Rule)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ConstraintCollection'
		//name=EString
		//'{'
		//    'rules' '{' rules+=Rule ( "," rules+=Rule)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ConstraintCollection'
		public Keyword getConstraintCollectionKeyword_0() { return cConstraintCollectionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'rules'
		public Keyword getRulesKeyword_3() { return cRulesKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//rules+=Rule
		public Assignment getRulesAssignment_5() { return cRulesAssignment_5; }
		
		//Rule
		public RuleCall getRulesRuleParserRuleCall_5_0() { return cRulesRuleParserRuleCall_5_0; }
		
		//( "," rules+=Rule)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//rules+=Rule
		public Assignment getRulesAssignment_6_1() { return cRulesAssignment_6_1; }
		
		//Rule
		public RuleCall getRulesRuleParserRuleCall_6_1_0() { return cRulesRuleParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.constraintdsl.ConstraintDslTextual.Rule");
		private final RuleCall cRangeRuleParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Rule returns Rule:
		//    RangeRule;
		@Override public ParserRule getRule() { return rule; }
		
		//RangeRule
		public RuleCall getRangeRuleParserRuleCall() { return cRangeRuleParserRuleCall; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.constraintdsl.ConstraintDslTextual.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class RangeRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.constraintdsl.ConstraintDslTextual.RangeRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEqualLowAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cEqualLowEqualLowKeyword_0_0 = (Keyword)cEqualLowAssignment_0.eContents().get(0);
		private final Assignment cEqualHighAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cEqualHighEqualHighKeyword_1_0 = (Keyword)cEqualHighAssignment_1.eContents().get(0);
		private final Keyword cRangeRuleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cArtifactKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cArtifactAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cArtifactEStringParserRuleCall_5_1_0 = (RuleCall)cArtifactAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAttributeKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAttributeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cAttributeEStringParserRuleCall_6_1_0 = (RuleCall)cAttributeAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLowKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cLowAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cLowEDoubleParserRuleCall_7_1_0 = (RuleCall)cLowAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cHighKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cHighAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cHighEDoubleParserRuleCall_8_1_0 = (RuleCall)cHighAssignment_8_1.eContents().get(0);
		private final Keyword cRelatedRuleKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cRelatedRuleAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cRelatedRuleRuleCrossReference_10_0 = (CrossReference)cRelatedRuleAssignment_10.eContents().get(0);
		private final RuleCall cRelatedRuleRuleEStringParserRuleCall_10_0_1 = (RuleCall)cRelatedRuleRuleCrossReference_10_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//RangeRule returns RangeRule:
		//    (equalLow?='equalLow')?
		//    (equalHigh?='equalHigh')?
		//    'RangeRule'
		//    name=EString
		//    '{'
		//        ('artifact' artifact=EString)?
		//        ('attribute' attribute=EString)?
		//        ('low' low=EDouble)?
		//        ('high' high=EDouble)?
		//        'relatedRule' relatedRule=[Rule|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(equalLow?='equalLow')?
		//(equalHigh?='equalHigh')?
		//'RangeRule'
		//name=EString
		//'{'
		//    ('artifact' artifact=EString)?
		//    ('attribute' attribute=EString)?
		//    ('low' low=EDouble)?
		//    ('high' high=EDouble)?
		//    'relatedRule' relatedRule=[Rule|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(equalLow?='equalLow')?
		public Assignment getEqualLowAssignment_0() { return cEqualLowAssignment_0; }
		
		//'equalLow'
		public Keyword getEqualLowEqualLowKeyword_0_0() { return cEqualLowEqualLowKeyword_0_0; }
		
		//(equalHigh?='equalHigh')?
		public Assignment getEqualHighAssignment_1() { return cEqualHighAssignment_1; }
		
		//'equalHigh'
		public Keyword getEqualHighEqualHighKeyword_1_0() { return cEqualHighEqualHighKeyword_1_0; }
		
		//'RangeRule'
		public Keyword getRangeRuleKeyword_2() { return cRangeRuleKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('artifact' artifact=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'artifact'
		public Keyword getArtifactKeyword_5_0() { return cArtifactKeyword_5_0; }
		
		//artifact=EString
		public Assignment getArtifactAssignment_5_1() { return cArtifactAssignment_5_1; }
		
		//EString
		public RuleCall getArtifactEStringParserRuleCall_5_1_0() { return cArtifactEStringParserRuleCall_5_1_0; }
		
		//('attribute' attribute=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'attribute'
		public Keyword getAttributeKeyword_6_0() { return cAttributeKeyword_6_0; }
		
		//attribute=EString
		public Assignment getAttributeAssignment_6_1() { return cAttributeAssignment_6_1; }
		
		//EString
		public RuleCall getAttributeEStringParserRuleCall_6_1_0() { return cAttributeEStringParserRuleCall_6_1_0; }
		
		//('low' low=EDouble)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'low'
		public Keyword getLowKeyword_7_0() { return cLowKeyword_7_0; }
		
		//low=EDouble
		public Assignment getLowAssignment_7_1() { return cLowAssignment_7_1; }
		
		//EDouble
		public RuleCall getLowEDoubleParserRuleCall_7_1_0() { return cLowEDoubleParserRuleCall_7_1_0; }
		
		//('high' high=EDouble)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'high'
		public Keyword getHighKeyword_8_0() { return cHighKeyword_8_0; }
		
		//high=EDouble
		public Assignment getHighAssignment_8_1() { return cHighAssignment_8_1; }
		
		//EDouble
		public RuleCall getHighEDoubleParserRuleCall_8_1_0() { return cHighEDoubleParserRuleCall_8_1_0; }
		
		//'relatedRule'
		public Keyword getRelatedRuleKeyword_9() { return cRelatedRuleKeyword_9; }
		
		//relatedRule=[Rule|EString]
		public Assignment getRelatedRuleAssignment_10() { return cRelatedRuleAssignment_10; }
		
		//[Rule|EString]
		public CrossReference getRelatedRuleRuleCrossReference_10_0() { return cRelatedRuleRuleCrossReference_10_0; }
		
		//EString
		public RuleCall getRelatedRuleRuleEStringParserRuleCall_10_0_1() { return cRelatedRuleRuleEStringParserRuleCall_10_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.constraintdsl.ConstraintDslTextual.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble returns ecore::EDouble:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "zombie.incatch.constraintdsl.ConstraintDslTextual.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	
	private final ConstraintCollectionElements pConstraintCollection;
	private final RuleElements pRule;
	private final EStringElements pEString;
	private final RangeRuleElements pRangeRule;
	private final EDoubleElements pEDouble;
	private final EBooleanElements pEBoolean;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ConstraintDslTextualGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pConstraintCollection = new ConstraintCollectionElements();
		this.pRule = new RuleElements();
		this.pEString = new EStringElements();
		this.pRangeRule = new RangeRuleElements();
		this.pEDouble = new EDoubleElements();
		this.pEBoolean = new EBooleanElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("zombie.incatch.constraintdsl.ConstraintDslTextual".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ConstraintCollection returns ConstraintCollection:
	//    'ConstraintCollection'
	//    name=EString
	//    '{'
	//        'rules' '{' rules+=Rule ( "," rules+=Rule)* '}'
	//    '}';
	public ConstraintCollectionElements getConstraintCollectionAccess() {
		return pConstraintCollection;
	}
	
	public ParserRule getConstraintCollectionRule() {
		return getConstraintCollectionAccess().getRule();
	}
	
	//Rule returns Rule:
	//    RangeRule;
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//RangeRule returns RangeRule:
	//    (equalLow?='equalLow')?
	//    (equalHigh?='equalHigh')?
	//    'RangeRule'
	//    name=EString
	//    '{'
	//        ('artifact' artifact=EString)?
	//        ('attribute' attribute=EString)?
	//        ('low' low=EDouble)?
	//        ('high' high=EDouble)?
	//        'relatedRule' relatedRule=[Rule|EString]
	//    '}';
	public RangeRuleElements getRangeRuleAccess() {
		return pRangeRule;
	}
	
	public ParserRule getRangeRuleRule() {
		return getRangeRuleAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
